# Generated by Django 4.2.16 on 2024-11-06 11:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('product_owner', models.BooleanField(default=False)),
                ('first_login', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='pics/')),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('phone1', models.CharField(blank=True, max_length=200, null=True)),
                ('phone2', models.CharField(blank=True, max_length=200, null=True)),
                ('address1', models.CharField(blank=True, max_length=200, null=True)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=200)),
                ('location_first_name', models.CharField(max_length=200)),
                ('location_last_name', models.CharField(max_length=200)),
                ('location_email', models.EmailField(max_length=200)),
                ('location_phone1', models.CharField(blank=True, max_length=200, null=True)),
                ('location_phone2', models.CharField(blank=True, max_length=200, null=True)),
                ('location_address1', models.CharField(blank=True, max_length=200, null=True)),
                ('location_address2', models.CharField(blank=True, max_length=200, null=True)),
                ('location_zip_code', models.CharField(blank=True, max_length=200, null=True)),
                ('location_city', models.CharField(blank=True, max_length=200, null=True)),
                ('location_country', models.CharField(blank=True, max_length=200, null=True)),
                ('location_gps_data', models.CharField(help_text="Latitude and Longitude in 'lat,lon' format", max_length=100)),
                ('location_radius', models.DecimalField(decimal_places=1, default=1.0, help_text='Radius in meters', max_digits=4)),
                ('location_notes', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Workzone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('address1', models.CharField(blank=True, max_length=200, null=True)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('distance_unit', models.CharField(choices=[('m', 'Meter'), ('ft', 'Feet')], default='m', help_text='Preferred distance unit for all users in this workzone', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=200)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('start_time_login', models.DateTimeField(blank=True, null=True)),
                ('end_time_login', models.DateTimeField(blank=True, null=True)),
                ('login_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('start_time_logout', models.DateTimeField(blank=True, null=True)),
                ('end_time_logout', models.DateTimeField(blank=True, null=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='white', max_length=100)),
                ('punctual', models.BooleanField(default=False)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules', to='db.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_add_customuser', models.BooleanField(default=False)),
                ('can_edit_customuser', models.BooleanField(default=False)),
                ('can_delete_customuser', models.BooleanField(default=False)),
                ('can_add_locations', models.BooleanField(default=False)),
                ('can_edit_locations', models.BooleanField(default=False)),
                ('can_delete_locations', models.BooleanField(default=False)),
                ('can_add_schedule', models.BooleanField(default=False)),
                ('can_edit_schedule', models.BooleanField(default=False)),
                ('can_delete_schedule', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='workzones',
            field=models.ManyToManyField(to='db.workzone'),
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('members', models.ManyToManyField(related_name='user_group', to=settings.AUTH_USER_MODEL)),
                ('workzone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='db.workzone')),
            ],
            options={
                'unique_together': {('workzone', 'name')},
            },
        ),
    ]
